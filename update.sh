#!/bin/bash

set -e  # Stoppe le script en cas d'erreur

# Charger les variables d'environnement
if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
fi

echo "ğŸ“¦ Sauvegarde de la base de donnÃ©es..."
[ ! -d db_folder ] && mkdir -p db_folder
docker exec $DB_CONTAINER pg_dump -U $DB_USER -d $DB_NAME > db_folder/backup.sql

echo "ğŸ“‚ DÃ©tection des fichiers dÃ©placÃ©s..."

# RÃ©cupÃ©rer les fichiers renommÃ©s (RXXX) et les dÃ©placer
git diff --name-status master origin/master | awk '$1 ~ /^R/ {print $2, $3}' | while read old new; do
    if [ -e "$old" ]; then
        echo "ğŸ”„ DÃ©placement de $old vers $new..."
        mkdir -p "$(dirname "$new")"
        mv "$old" "$new"
    fi
done

echo "ğŸ›  RÃ©initialisation de la branche master..."
git fetch origin
git checkout master
git reset --hard origin/master

echo "ğŸ§¹ Nettoyage des fichiers obsolÃ¨tes..."
git clean -df

echo "ğŸš€ Reconstruction de l'environnement..."
docker-compose down
docker-compose up -d --build

echo "âœ… Mise Ã  jour terminÃ©e !"
