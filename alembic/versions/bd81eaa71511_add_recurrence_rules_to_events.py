"""add recurrence rules to events

Revision ID: bd81eaa71511
Revises: 6b4ef429c085
Create Date: 2025-02-22 15:38:22.073346

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bd81eaa71511'
down_revision = '6b4ef429c085'
branch_labels = None
depends_on = None

# Surcharge de la mÃ©thode create_table pour ajouter if_not_exists=True
_original_create_table = op.create_table
def create_table_with_if_not_exists(*args, **kwargs):
    kwargs['if_not_exists'] = True
    return _original_create_table(*args, **kwargs)
op.create_table = create_table_with_if_not_exists

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('extraevents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('recurrence_rule', sa.String(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('extraevents', schema=None) as batch_op:
        batch_op.drop_column('recurrence_rule')

    # ### end Alembic commands ###
