"""initial

Revision ID: 841e980f9b6b
Revises: 
Create Date: 2023-05-31 12:57:50.467844

"""
from alembic import op
import sqlalchemy as sa
from sqlmodel import SQLModel
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '841e980f9b6b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('call_data_records',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('historyid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('callid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration', sa.Time(), nullable=True),
    sa.Column('time_start', sa.DateTime(), nullable=True),
    sa.Column('time_answered', sa.DateTime(), nullable=True),
    sa.Column('time_end', sa.DateTime(), nullable=True),
    sa.Column('reason_terminated', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('from_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('to_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('from_dn', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('to_dn', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dial_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reason_changed', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('final_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('final_dn', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bill_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bill_rate', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bill_cost', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bill_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('chain', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('from_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('to_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('final_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('from_dispname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('to_dispname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('final_dispname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('missed_queue_calls', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_call_data_records')),
    sa.UniqueConstraint('callid', name=op.f('uq_call_data_records_callid')),
    sa.UniqueConstraint('historyid', name=op.f('uq_call_data_records_historyid')),
    if_not_exists=True)
    op.create_table('extensions',
    sa.Column('extension', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mail', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_added', sa.Date(), nullable=True),
    sa.Column('date_out', sa.Date(), nullable=True),
    sa.Column('out', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_extensions')),
    if_not_exists=True)
    with op.batch_alter_table('extensions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_extensions_extension'), ['extension'], unique=False)
        batch_op.create_index(batch_op.f('ix_extensions_name'), ['name'], unique=False)

    op.create_table('queues',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('queue', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('queuename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_queues')),
    if_not_exists=True)
    op.create_table('call_data_records_details',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('cdr_historyid', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('abandonned', sa.Boolean(), nullable=False),
    sa.Column('handling_time_seconds', sa.Integer(), nullable=False),
    sa.Column('waiting_time_seconds', sa.Integer(), nullable=False),
    sa.Column('call_date', sa.Date(), nullable=False),
    sa.Column('call_time', sa.Time(), nullable=False),
    sa.Column('day_of_week', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['cdr_historyid'], ['call_data_records.historyid'], name=op.f('fk_call_data_records_details_cdr_historyid_call_data_records')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_call_data_records_details')),
    if_not_exists=True)
    op.create_table('extensiontoqueuelink',
    sa.Column('extension_id', sa.Integer(), nullable=True),
    sa.Column('queue_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['extension_id'], ['extensions.id'], name=op.f('fk_extensiontoqueuelink_extension_id_extensions')),
    sa.ForeignKeyConstraint(['queue_id'], ['queues.id'], name=op.f('fk_extensiontoqueuelink_queue_id_queues')),
    sa.PrimaryKeyConstraint('extension_id', 'queue_id', name=op.f('pk_extensiontoqueuelink')),
    if_not_exists=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('extensiontoqueuelink')
    op.drop_table('call_data_records_details')
    op.drop_table('queues')
    with op.batch_alter_table('extensions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_extensions_name'))
        batch_op.drop_index(batch_op.f('ix_extensions_extension'))

    op.drop_table('extensions')
    op.drop_table('call_data_records')
    # ### end Alembic commands ###
