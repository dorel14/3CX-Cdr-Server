"""Change exdate to datetime

Revision ID: 315735431c93
Revises: 7d3ece5c0869
Create Date: 2025-03-01 16:49:56.741639

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '315735431c93'
down_revision = '7d3ece5c0869'
branch_labels = None
depends_on = None

# Surcharge de la mÃ©thode create_table pour ajouter if_not_exists=True
_original_create_table = op.create_table
def create_table_with_if_not_exists(*args, **kwargs):
    kwargs['if_not_exists'] = True
    return _original_create_table(*args, **kwargs)
op.create_table = create_table_with_if_not_exists

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('extraevents', schema=None) as batch_op:
        batch_op.alter_column('exdate',
               existing_type=postgresql.ARRAY(sa.DATE()),
               type_=postgresql.ARRAY(sa.DateTime()),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('extraevents', schema=None) as batch_op:
        batch_op.alter_column('exdate',
               existing_type=postgresql.ARRAY(sa.DateTime()),
               type_=postgresql.ARRAY(sa.DATE()),
               existing_nullable=True)

    # ### end Alembic commands ###
