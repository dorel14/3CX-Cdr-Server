"""modification type sur table call_data_records_details

Revision ID: 9fd4ad31c31d
Revises: df10cb5cf782
Create Date: 2022-08-02 19:16:24.792520

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9fd4ad31c31d'
down_revision = 'df10cb5cf782'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('call_data_records', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('call_data_records_id_seq'::regclass)"))
    op.add_column('call_data_records_details', sa.Column('cdr_historyid', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('call_data_records_details', sa.Column('handling_time_seconds', sa.Integer(), nullable=False))
    op.add_column('call_data_records_details', sa.Column('waiting_time_seconds', sa.Integer(), nullable=False))
    op.alter_column('call_data_records_details', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.drop_constraint('call_data_records_details_cdr_id_fkey', 'call_data_records_details', type_='foreignkey')
    op.create_foreign_key(None, 'call_data_records_details', 'call_data_records', ['cdr_historyid'], ['historyid'])
    op.drop_column('call_data_records_details', 'cdr_id')
    op.drop_column('call_data_records_details', 'handling_time')
    op.drop_column('call_data_records_details', 'waiting_time')
    op.alter_column('extensions', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('extensiontoqueuelink', 'extension_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('extensiontoqueuelink', 'queue_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('queues', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('queues', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('extensiontoqueuelink', 'queue_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('extensiontoqueuelink', 'estension_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('extensions', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.add_column('call_data_records_details', sa.Column('waiting_time', postgresql.TIME(), autoincrement=False, nullable=False))
    op.add_column('call_data_records_details', sa.Column('handling_time', postgresql.TIME(), autoincrement=False, nullable=False))
    op.add_column('call_data_records_details', sa.Column('cdr_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'call_data_records_details', type_='foreignkey')
    op.drop_constraint(None, 'call_data_records_details', type_='foreignkey')
    op.create_foreign_key('call_data_records_details_cdr_id_fkey', 'call_data_records_details', 'call_data_records', ['cdr_id'], ['id'])
    op.alter_column('call_data_records_details', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.drop_column('call_data_records_details', 'waiting_time_seconds')
    op.drop_column('call_data_records_details', 'handling_time_seconds')
    op.drop_column('call_data_records_details', 'cdr_callid')
    op.drop_column('call_data_records_details', 'cdr_historyid')
    op.alter_column('call_data_records', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('call_data_records_id_seq'::regclass)"))
    # ### end Alembic commands ###
