"""add recurrence rules to events

Revision ID: 7d3ece5c0869
Revises: bd81eaa71511
Create Date: 2025-03-01 15:56:38.913894

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d3ece5c0869'
down_revision = 'bd81eaa71511'
branch_labels = None
depends_on = None

# Surcharge de la mÃ©thode create_table pour ajouter if_not_exists=True
_original_create_table = op.create_table
def create_table_with_if_not_exists(*args, **kwargs):
    kwargs['if_not_exists'] = True
    return _original_create_table(*args, **kwargs)
op.create_table = create_table_with_if_not_exists

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('extraevents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('exdate', postgresql.ARRAY(sa.Date()), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('extraevents', schema=None) as batch_op:
        batch_op.drop_column('exdate')

    # ### end Alembic commands ###
